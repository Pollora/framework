<?php

declare(strict_types=1);

namespace Plugin\%plugin_namespace%\Providers;

use Illuminate\Support\ServiceProvider;
use Pollora\Support\Facades\Asset;

/**
 * Asset service provider for %plugin_name% plugin.
 *
 * Handles asset registration and enqueuing for the plugin.
 * Uses Vite for modern asset management with hot reload support.
 */
class AssetServiceProvider extends ServiceProvider
{
    /**
     * Plugin configuration.
     *
     * @var array
     */
    protected array $config;

    /**
     * Register any application services.
     */
    public function register(): void
    {
        // Load plugin configuration
        $this->loadConfig();
    }

    /**
     * Bootstrap any application services.
     */
    public function boot(): void
    {
        $this->registerPluginAssets();
    }

    /**
     * Load plugin configuration.
     *
     * @return void
     */
    protected function loadConfig(): void
    {
        $configPath = __DIR__ . '/../../config/plugin.php';
        $this->config = file_exists($configPath) ? require $configPath : [];
    }

    /**
     * Get the plugin container name.
     *
     * @return string
     */
    protected function getContainerName(): string
    {
        $slug = $this->config['slug'] ?? '%plugin_slug%';
        return "plugin.{$slug}";
    }

    /**
     * Register plugin assets.
     *
     * @return void
     */
    protected function registerPluginAssets(): void
    {
        $containerName = $this->getContainerName();
        $slug = $this->config['slug'] ?? '%plugin_slug%';

        // Admin assets
        Asset::add("{$slug}/admin", 'admin.js')
            ->container($containerName)
            ->toBackend()
            ->useVite();

        // Plugin styles
        Asset::add("{$slug}/styles", 'app.css')
            ->container($containerName)
            ->toBackend()
            ->useVite();
    }
}
